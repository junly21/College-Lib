{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as authAPI from '../lib/api/auth';\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes('auth/REGISTER');\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes('auth/LOGIN');\nexport const changeField = createAction(CHANGE_FIELD, _ref => {\n  let {\n    form,\n    key,\n    value\n  } = _ref;\n  return {\n    form,\n    // register , login\n    key,\n    // username, password, passwordConfirm\n    value // 실제 바꾸려는 값\n  };\n}); //첫번째 인자는 함수(타입 액션), 두번재 인자는 초기값\n\nexport const initializeForm = createAction(INITIALIZE_FORM, form => form); // register / login\n\nexport const register = createAction(REGISTER, _ref2 => {\n  let {\n    username,\n    password\n  } = _ref2;\n  return {\n    username,\n    password\n  };\n});\nexport const login = createAction(LOGIN, _ref3 => {\n  let {\n    username,\n    password\n  } = _ref3;\n  return {\n    username,\n    password\n  };\n});\n\n// saga 생성\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\nexport function* authSaga() {\n  yield takeLatest(REGISTER, registerSaga);\n  yield takeLatest(LOGIN, loginSaga);\n}\nconst initialState = {\n  register: {\n    username: '',\n    password: '',\n    passwordConfirm: ''\n  },\n  login: {\n    username: '',\n    password: ''\n  },\n  auth: null,\n  authError: null\n};\nconst auth = handleActions({\n  [CHANGE_FIELD]: (state, _ref4) => {\n    let {\n      payload: {\n        form,\n        key,\n        value\n      }\n    } = _ref4;\n    return produce(state, draft => {\n      draft[form][key] = value; // 예: state.register.username을 바꾼다\n    });\n  },\n\n  [INITIALIZE_FORM]: (state, _ref5) => {\n    let {\n      payload: form\n    } = _ref5;\n    return {\n      ...state,\n      [form]: initialState[form]\n    };\n  },\n  // 회원가입 성공\n  [REGISTER_SUCCESS]: (state, _ref6) => {\n    let {\n      payload: auth\n    } = _ref6;\n    return {\n      ...state,\n      authError: null,\n      auth\n    };\n  },\n  // 회원가입 실패\n  [REGISTER_FAILURE]: (state, _ref7) => {\n    let {\n      payload: error\n    } = _ref7;\n    return {\n      ...state,\n      authError: error\n    };\n  },\n  // 로그인 성공\n  [LOGIN_SUCCESS]: (state, _ref8) => {\n    let {\n      payload: auth\n    } = _ref8;\n    return {\n      ...state,\n      authError: null,\n      auth\n    };\n  },\n  // 로그인 실패\n  [LOGIN_FAILURE]: (state, _ref9) => {\n    let {\n      payload: error\n    } = _ref9;\n    return {\n      ...state,\n      authError: error\n    };\n  }\n}, initialState);\nexport default auth;","map":{"version":3,"names":["createAction","handleActions","produce","takeLatest","createRequestSaga","createRequestActionTypes","authAPI","CHANGE_FIELD","INITIALIZE_FORM","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","changeField","_ref","form","key","value","initializeForm","register","_ref2","username","password","login","_ref3","registerSaga","loginSaga","authSaga","initialState","passwordConfirm","auth","authError","state","_ref4","payload","draft","_ref5","_ref6","_ref7","error","_ref8","_ref9"],"sources":["/Users/jeong-uiyeob/아주대/소공 강노/프로젝트/College-Lib/front/blog-frontend/src/modules/auth.js"],"sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport produce from 'immer';\nimport { takeLatest } from 'redux-saga/effects';\nimport createRequestSaga, {\n  createRequestActionTypes,\n} from '../lib/createRequestSaga';\nimport * as authAPI from '../lib/api/auth';\n\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] =\n  createRequestActionTypes('auth/REGISTER');\n\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] =\n  createRequestActionTypes('auth/LOGIN');\n\nexport const changeField = createAction(\n  CHANGE_FIELD,\n  ({ form, key, value }) => ({\n    form, // register , login\n    key, // username, password, passwordConfirm\n    value, // 실제 바꾸려는 값\n  }),\n); //첫번째 인자는 함수(타입 액션), 두번재 인자는 초기값\n\nexport const initializeForm = createAction(INITIALIZE_FORM, (form) => form); // register / login\n\nexport const register = createAction(REGISTER, ({ username, password }) => ({\n  username,\n  password,\n}));\nexport const login = createAction(LOGIN, ({ username, password }) => ({\n  username,\n  password,\n}));\n\n// saga 생성\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\nexport function* authSaga() {\n  yield takeLatest(REGISTER, registerSaga);\n  yield takeLatest(LOGIN, loginSaga);\n}\n\nconst initialState = {\n  register: {\n    username: '',\n    password: '',\n    passwordConfirm: '',\n  },\n  login: {\n    username: '',\n    password: '',\n  },\n  auth: null,\n  authError: null,\n};\n\nconst auth = handleActions(\n  {\n    [CHANGE_FIELD]: (state, { payload: { form, key, value } }) =>\n      produce(state, (draft) => {\n        draft[form][key] = value; // 예: state.register.username을 바꾼다\n      }),\n    [INITIALIZE_FORM]: (state, { payload: form }) => ({\n      ...state,\n      [form]: initialState[form],\n    }),\n    // 회원가입 성공\n    [REGISTER_SUCCESS]: (state, { payload: auth }) => ({\n      ...state,\n      authError: null,\n      auth,\n    }),\n    // 회원가입 실패\n    [REGISTER_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      authError: error,\n    }),\n    // 로그인 성공\n    [LOGIN_SUCCESS]: (state, { payload: auth }) => ({\n      ...state,\n      authError: null,\n      auth,\n    }),\n    // 로그인 실패\n    [LOGIN_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      authError: error,\n    }),\n  },\n  initialState,\n);\n\nexport default auth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}