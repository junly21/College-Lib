{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; // 새로고침 이후 임시 로그인 처리\n// 회원 정보 확인\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes('user/CHECK');\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\nexport const check = createAction(CHECK);\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\nexport function* userSaga() {\n  yield takeLatest(CHECK, checkSaga);\n}\nconst initialState = {\n  user: null,\n  checkError: null\n};\nexport default handleActions({\n  [TEMP_SET_USER]: (state, _ref) => {\n    let {\n      payload: user\n    } = _ref;\n    return {\n      ...state,\n      user\n    };\n  },\n  [CHECK_SUCCESS]: (state, _ref2) => {\n    let {\n      payload: user\n    } = _ref2;\n    return {\n      ...state,\n      user,\n      checkError: null\n    };\n  },\n  [CHECK_FAILURE]: (state, _ref3) => {\n    let {\n      payload: error\n    } = _ref3;\n    return {\n      ...state,\n      user: null,\n      checkError: error\n    };\n  }\n}, initialState);","map":{"version":3,"names":["createAction","handleActions","takeLatest","authAPI","createRequestSaga","createRequestActionTypes","TEMP_SET_USER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","tempSetUser","user","check","checkSaga","userSaga","initialState","checkError","state","_ref","payload","_ref2","_ref3","error"],"sources":["/Users/jeong-uiyeob/아주대/소공 강노/프로젝트/College-Lib/front/blog-frontend/src/modules/user.js"],"sourcesContent":["import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\nimport createRequestSaga, {\n  createRequestActionTypes\n} from '../lib/createRequestSaga';\n\nconst TEMP_SET_USER = 'user/TEMP_SET_USER'; // 새로고침 이후 임시 로그인 처리\n// 회원 정보 확인\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\n  'user/CHECK'\n);\n\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\nexport const check = createAction(CHECK);\n\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\nexport function* userSaga() {\n  yield takeLatest(CHECK, checkSaga);\n}\n\nconst initialState = {\n  user: null,\n  checkError: null\n};\n\nexport default handleActions(\n  {\n    [TEMP_SET_USER]: (state, { payload: user }) => ({\n      ...state,\n      user\n    }),\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\n      ...state,\n      user,\n      checkError: null\n    }),\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\n      ...state,\n      user: null,\n      checkError: error\n    })\n  },\n  initialState\n);\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,QAAQ,eAAe;AAC3D,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,OAAO,KAAKC,OAAO,MAAM,iBAAiB;AAC1C,OAAOC,iBAAiB,IACtBC,wBAAwB,QACnB,0BAA0B;AAEjC,MAAMC,aAAa,GAAG,oBAAoB,CAAC,CAAC;AAC5C;AACA,MAAM,CAACC,KAAK,EAAEC,aAAa,EAAEC,aAAa,CAAC,GAAGJ,wBAAwB,CACpE,YAAY,CACb;AAED,OAAO,MAAMK,WAAW,GAAGV,YAAY,CAACM,aAAa,EAAEK,IAAI,IAAIA,IAAI,CAAC;AACpE,OAAO,MAAMC,KAAK,GAAGZ,YAAY,CAACO,KAAK,CAAC;AAExC,MAAMM,SAAS,GAAGT,iBAAiB,CAACG,KAAK,EAAEJ,OAAO,CAACS,KAAK,CAAC;AACzD,OAAO,UAAUE,QAAQA,CAAA,EAAG;EAC1B,MAAMZ,UAAU,CAACK,KAAK,EAAEM,SAAS,CAAC;AACpC;AAEA,MAAME,YAAY,GAAG;EACnBJ,IAAI,EAAE,IAAI;EACVK,UAAU,EAAE;AACd,CAAC;AAED,eAAef,aAAa,CAC1B;EACE,CAACK,aAAa,GAAG,CAACW,KAAK,EAAAC,IAAA;IAAA,IAAE;MAAEC,OAAO,EAAER;IAAK,CAAC,GAAAO,IAAA;IAAA,OAAM;MAC9C,GAAGD,KAAK;MACRN;IACF,CAAC;EAAA,CAAC;EACF,CAACH,aAAa,GAAG,CAACS,KAAK,EAAAG,KAAA;IAAA,IAAE;MAAED,OAAO,EAAER;IAAK,CAAC,GAAAS,KAAA;IAAA,OAAM;MAC9C,GAAGH,KAAK;MACRN,IAAI;MACJK,UAAU,EAAE;IACd,CAAC;EAAA,CAAC;EACF,CAACP,aAAa,GAAG,CAACQ,KAAK,EAAAI,KAAA;IAAA,IAAE;MAAEF,OAAO,EAAEG;IAAM,CAAC,GAAAD,KAAA;IAAA,OAAM;MAC/C,GAAGJ,KAAK;MACRN,IAAI,EAAE,IAAI;MACVK,UAAU,EAAEM;IACd,CAAC;EAAA;AACH,CAAC,EACDP,YAAY,CACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}