{"ast":null,"code":"import axios from 'axios';\nconst client = axios.create();\n\n/*\n  글로벌 설정 예시:\n  \n  // API 주소를 다른 곳으로 사용함\n  client.defaults.baseURL = 'https://external-api-server.com/' \n\n  // 헤더 설정\n  client.defaults.headers.common['Authorization'] = 'Bearer a1b2c3d4';\n\n  // 인터셉터 설정\n  axios.intercepter.response.use(\\\n    response => {\n      // 요청 성공 시 특정 작업 수행\n      return response;\n    }, \n    error => {\n      // 요청 실패 시 특정 작업 수행\n      return Promise.reject(error);\n    }\n  })  \n*/\n\nexport default client;","map":{"version":3,"names":["axios","client","create"],"sources":["/Users/jeong-uiyeob/아주대/소공 강노/프로젝트/College-Lib/front/blog-frontend/src/lib/api/client.js"],"sourcesContent":["import axios from 'axios';\n\nconst client = axios.create();\n\n/*\n  글로벌 설정 예시:\n  \n  // API 주소를 다른 곳으로 사용함\n  client.defaults.baseURL = 'https://external-api-server.com/' \n\n  // 헤더 설정\n  client.defaults.headers.common['Authorization'] = 'Bearer a1b2c3d4';\n\n  // 인터셉터 설정\n  axios.intercepter.response.use(\\\n    response => {\n      // 요청 성공 시 특정 작업 수행\n      return response;\n    }, \n    error => {\n      // 요청 실패 시 특정 작업 수행\n      return Promise.reject(error);\n    }\n  })  \n*/\n\nexport default client;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAGD,KAAK,CAACE,MAAM,EAAE;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeD,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}